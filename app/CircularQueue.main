#include "../code/CircularQueue.h"

#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <string>

using namespace std;

#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <string>
#include <filesystem>

namespace fs = std::filesystem;

using namespace std;

void processCSV(const string& filename, vector<vector<string>>& all_data) {
    ifstream file(filename);
    if (!file.is_open()) {
        cerr << "Error: Could not open file " << filename << endl;
        return;
    }

    string line;
    while (getline(file, line)) {
        vector<string> row;
        stringstream lineStream(line);
        string cell;

        while (getline(lineStream, cell, ',')) {
            row.push_back(cell);
        }

        all_data.push_back(row);
    }

    file.close();
}

int main() {
    string folder_path = "./csv_folder";  // Path to the folder containing CSV files
    vector<vector<string>> combined_data;

    try {
        for (const auto& entry : fs::directory_iterator(folder_path)) {
            if (entry.is_regular_file() && entry.path().extension() == ".csv") {
                cout << "Processing file: " << entry.path().filename() << endl;
                processCSV(entry.path().string(), combined_data);
            }
        }
    } catch (const fs::filesystem_error& e) {
        cerr << "Filesystem error: " << e.what() << endl;
        return 1;
    }

    // Display combined data
    for (const auto& row : combined_data) {
        for (const auto& cell : row) {
            cout << cell << " ";
        }
        cout << endl;
    }

    return 0;
}
